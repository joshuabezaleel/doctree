version: "3"

tasks:
  default:
    desc: Run development server, watching code files for changes.
    cmds:
      - task --parallel fmt-lint backend frontend --watch

  cloud:
    desc: Run development server, watching code files for changes.
    cmds:
      - task --parallel fmt-lint backend-cloud frontend --watch

  fmt-lint:
    desc: "Run formatters and linters"
    cmds:
      - task: fmt
      - task: lint

  backend:
    desc: Run "doctree serve" backend
    cmds:
      - .bin/doctree serve
    env:
      ELM_DEBUG_SERVER: "http://localhost:8000/"
    deps:
      - build-go-debug

  backend-cloud:
    desc: Run "doctree serve -cloud" backend
    cmds:
      - .bin/doctree serve -cloud
    env:
      ELM_DEBUG_SERVER: "http://localhost:8000/"
    deps:
      - build-go-debug

  frontend:
    desc: Run Elm frontend dev server
    dir: frontend
    cmds:
      - npx elm-live --dir public --pushstate true src/Main.elm -- --output=public/dist/elm.js

  build:
    desc: Build Go + Elm code in release mode
    cmds:
      - task: build-go-release
    deps:
      - task: build-elm-release

  build-elm-debug:
    desc: Build Elm frontend code (debug mode)
    dir: frontend
    cmds:
      - mkdir -p public/dist/
      - npx elm make --debug src/Main.elm --output ./public/dist/elm.js
    sources:
      - ./frontend/src/**/*.elm
    generates:
      - ./frontend/public/dist/elm.js

  build-elm-release:
    desc: Build Elm frontend code (release mode, minified, etc.)
    dir: frontend
    cmds:
      - mkdir -p public/dist/
      - npx elm make src/Main.elm --optimize --output ./public/dist/elm.js
    sources:
      - ./frontend/src/**/*.elm
    generates:
      - ./frontend/public/dist/elm.js

  build-go-debug:
    desc: Build .bin/doctree (debug)
    cmds:
      - mkdir -p .bin
      - go build -ldflags "-w" -o .bin/doctree ./cmd/doctree
    sources:
      - ./**/*.go
      - libs/sinter/**/*.zig
    generates:
      - .bin/doctree
    deps:
      - task: build-zig-debug

  build-go-release:
    desc: Build .bin/doctree (release)
    cmds:
      - mkdir -p .bin
      - go build -o .bin/doctree ./cmd/doctree
    sources:
      - ./**/*.go
      - ./frontend/public/**
      - libs/sinter/**/*.zig
    generates:
      - .bin/doctree
    deps:
      - task: build-zig-release

  build-zig-debug:
    desc: Build Zig code in debug mode
    cmds:
      - rm -f libs/sinter/bindings/sinter-go/go.mod
      - cd libs/sinter && zig build
    sources:
      - libs/sinter/**/*.zig

  build-zig-release:
    desc: Build Zig code in release mode
    cmds:
      - rm -f libs/sinter/bindings/sinter-go/go.mod
      - cd libs/sinter && zig build -Drelease-fast=true
    sources:
      - libs/sinter/**/*.zig

  test:
    desc: Run all tests
    cmds:
      - go test ./...
    deps:
      - task: build-zig-debug

  test-race:
    desc: Run all tests (checking for race conditions, slow)
    cmds:
      - go test -race ./...
    deps:
      - task: build-zig-debug

  generate:
    desc: Produce generated code
    cmds:
      - go generate ./...
    sources:
      - ./**/*.go

  lint:
    desc: Lint code
    cmds:
      # Using --go=1.17 for now because of https://github.com/golangci/golangci-lint/issues/2649
      - .bin/golangci-lint run --go=1.17 ./...
    sources:
      - ./**/*.go
    deps:
      - build-tools

  fmt:
    desc: Format code
    cmds:
      - .bin/gofumpt -l -w .
    sources:
      - ./**/*.go
    deps:
      - build-tools

  setup:
    desc: Install dependencies, pull submodules
    cmds:
      - git submodule update --init --recursive
      - cd frontend && npm install

  build-tools:
    desc: Build tool dependencies (golangci-lint, etc.)
    cmds:
      - GOBIN="$(pwd)/.bin" go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.45.2
      - GOBIN="$(pwd)/.bin" go install mvdan.cc/gofumpt@latest
    status:
      - test -f .bin/golangci-lint
      - test -f .bin/gofumpt

  build-image:
    desc: Build sourcegraph/doctree:dev Docker image
    cmds:
      - docker build --no-cache -t sourcegraph/doctree:dev .
    deps:
      - task: cc-x86_64-linux
      - task: build-elm-release

  run-image:
    desc: Run sourcegraph/doctree:dev Docker image
    cmds:
      - docker run -it sourcegraph/doctree:dev

  cross-compile:
    desc: "Cross compile binaries using Zig (requires Go 1.18+, Zig 0.10+, macOS Monterey 12+ host machine)"
    cmds:
      - task: cc-x86_64-linux
      - task: cc-x86_64-macos
      - task: cc-aarch64-macos
      - task: cc-x86_64-windows

  cc-x86_64-linux:
    desc: "Cross compile to x86_64-linux using Zig"
    cmds:
      - rm -f libs/sinter/bindings/sinter-go/go.mod
      - cd libs/sinter && zig build -Drelease-fast=true -Dtarget=x86_64-linux-musl
      - go build -o out/doctree-x86_64-linux ./cmd/doctree/
    env:
      CGO_ENABLED: "1"
      GOOS: "linux"
      GOARCH: "amd64"
      CC: "zig cc -target x86_64-linux-musl"
      CXX: "zig c++ -target x86_64-linux-musl"
    sources:
      - ./**/*.go
      - ./frontend/public/**
    generates:
      - out/doctree-x86_64-macos
    deps:
      - task: build-elm-release

  cc-x86_64-macos:
    desc: "Cross compile to x86_64-macos using Zig (REQUIRES XCODE, ONLY WORKS ON MACOS)"
    cmds:
      - rm -f libs/sinter/bindings/sinter-go/go.mod
      - cd libs/sinter && zig build -Drelease-fast=true -Dtarget=x86_64-macos
      - go build -o out/doctree-x86_64-macos -buildmode=pie -ldflags "-s -w -linkmode external" ./cmd/doctree/
    env:
      CGO_ENABLED: "1"
      GOOS: "darwin"
      GOARCH: "amd64"
      CC: "zig cc -target x86_64-macos  -F /System/Library/Frameworks --sysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      CXX: "zig c++ -target x86_64-macos  -F /System/Library/Frameworks --sysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
    sources:
      - ./**/*.go
      - ./frontend/public/**
    generates:
      - out/doctree-x86_64-macos
    deps:
      - task: build-elm-release

  cc-aarch64-macos:
    desc: "Cross compile to aarch64-macos using Zig (REQUIRES XCODE, ONLY WORKS ON MACOS 12+)"
    cmds:
      - rm -f libs/sinter/bindings/sinter-go/go.mod
      - cd libs/sinter && zig build -Drelease-fast=true -Dtarget=aarch64-macos
      - go build -o out/doctree-aarch64-macos -buildmode=pie -ldflags "-s -w -linkmode external" ./cmd/doctree/
    env:
      CGO_ENABLED: "1"
      GOOS: "darwin"
      GOARCH: "arm64"
      CC: "zig cc -target aarch64-macos -F /System/Library/Frameworks --sysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
      CXX: "zig c++ -target aarch64-macos -F /System/Library/Frameworks --sysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk"
    sources:
      - ./**/*.go
      - ./frontend/public/**
    generates:
      - out/doctree-aarch64-macos
    deps:
      - task: build-elm-release

  cc-x86_64-windows:
    desc: "Cross compile to x86_64-windows using Zig"
    cmds:
      - rm -f libs/sinter/bindings/sinter-go/go.mod
      - cd libs/sinter && zig build -Drelease-fast=true -Dtarget=x86_64-windows-gnu
      - go build -o out/doctree-x86_64-windows.exe ./cmd/doctree/
    env:
      CGO_ENABLED: "1"
      GOOS: "windows"
      GOARCH: "amd64"
      CC: "zig cc -Wno-dll-attribute-on-redeclaration -target x86_64-windows-gnu"
      CXX: "zig c++ -target x86_64-windows-gnu"
    sources:
      - ./**/*.go
      - ./frontend/public/**
    generates:
      - out/doctree-x86_64-windows.exe
    deps:
      - task: build-elm-release

  ops-add-repo:
    desc: "Add a repo to doctree.org (requires operations access)"
    cmds:
      - ssh $HOST -t 'rm -rf repo/'
      - ssh $HOST -t 'git clone --depth 1 {{.CLI_ARGS}} repo'
      - ssh $HOST -t 'chown 10000:10001 -R repo'
      - ssh $HOST -t 'cd repo/ && docker run -i --volume $(pwd):/index --volume /.doctree:/home/nonroot/.doctree --entrypoint=sh sourcegraph/doctree:latest -c "cd /index && doctree index ."'
      # TODO why is this necessary? Docker volume becomes not in sync with host, how come?
      - ssh $HOST -t 'docker restart doctree'
    env:
      HOST: root@164.92.76.86

  ops-add-repo-zigstd:
    desc: "Add a ziglang/zig stdlib to doctree.org (requires operations access)"
    cmds:
      # TODO: Right now, we must cd into lib/std because otherwise indexing ziglang/zig fails!
      - ssh $HOST -t 'rm -rf repo/'
      - ssh $HOST -t 'git clone --depth 1 {{.CLI_ARGS}} repo'
      - ssh $HOST -t 'chown 10000:10001 -R repo'
      - ssh $HOST -t 'cd repo/lib/std && docker run -i --volume $(pwd):/index --volume /.doctree:/home/nonroot/.doctree --entrypoint=sh sourcegraph/doctree:latest -c "cd /index && doctree index -project=github.com/ziglang/zig ."'
      # TODO why is this necessary? Docker volume becomes not in sync with host, how come?
      - ssh $HOST -t 'docker restart doctree'
    env:
      HOST: root@164.92.76.86

  ops-remove-all:
    desc: "Remove all data from doctree.org (requires operations access)"
    cmds:
      - ssh $HOST -t 'rm -rf /.doctree'
      - ssh $HOST -t 'mkdir /.doctree'
      - ssh $HOST -t 'chown 10000:10001 -R /.doctree'
    env:
      HOST: root@164.92.76.86

  ops-add-sample-repos:
    desc: "Add sample repos to doctree.org (requires operations access)"
    cmds:
      - task ops-add-repo -- github.com/Sobeston/ziglearn
      - task ops-add-repo -- github.com/alanhamlett/pip-update-requirements
      - task ops-add-repo -- github.com/caddyserver/caddy
      - task ops-add-repo -- github.com/cozy/cozy-stack
      - task ops-add-repo -- github.com/django/django
      - task ops-add-repo -- github.com/elastic/elasticsearch
      - task ops-add-repo -- github.com/facebook/react
      - task ops-add-repo -- github.com/gogs/gogs
      - task ops-add-repo -- github.com/golang/go
      - task ops-add-repo -- github.com/gorilla/mux
      - task ops-add-repo -- github.com/hexops/mach
      - task ops-add-repo -- github.com/jertel/elastalert2
      - task ops-add-repo -- github.com/kevinwojo/mvs
      - task ops-add-repo -- github.com/kooparse/zalgebra
      - task ops-add-repo -- github.com/kooparse/zgltf
      - task ops-add-repo -- github.com/paulshen/css-editor
      - task ops-add-repo -- github.com/pytest-dev/pytest
      - task ops-add-repo -- github.com/rasahq/rasa
      - task ops-add-repo -- github.com/renode/renode
      - task ops-add-repo -- github.com/saltbo/zpan
      - task ops-add-repo -- github.com/smallstep/certificates
      - task ops-add-repo -- github.com/sourcegraph/sourcegraph
      - task ops-add-repo -- github.com/wakatime/wakatime-cli
      - task ops-add-repo -- github.com/zephyrproject-rtos/zephyr
      - task ops-add-repo -- github.com/ziglang/zig
    env:
      HOST: root@164.92.76.86

  ops-deploy:
    desc: "Deploy latest version to doctree.org (requires operations access)"
    cmds:
      - ssh $HOST -t 'docker pull sourcegraph/doctree:latest'
      - ssh $HOST -t 'docker rm -f doctree || true'
      - ssh $HOST -t 'docker run -d --restart=always --name doctree -p 80:3333 --volume /.doctree:/home/nonroot/.doctree sourcegraph/doctree:latest serve -cloud'
      - ssh $HOST -t 'docker ps'
    env:
      HOST: root@164.92.76.86

  dev-clone-sample-repos:
    desc: "Clone sample repos for dev environment"
    cmds:
      - rm -rf ../doctree-samples/ && mkdir ../doctree-samples/
      - cd ../doctree-samples/ && git clone --depth 1 https://github.com/golang/go
      - cd ../doctree-samples/ && git clone --depth 1 https://github.com/gorilla/mux
      - cd ../doctree-samples/ && git clone --depth 1 https://github.com/django/django
      - cd ../doctree-samples/ && git clone --depth 1 https://github.com/Sobeston/ziglearn
      - cd ../doctree-samples/ && git clone --depth 1 https://github.com/ziglang/zig

  dev-index-sample-repos:
    desc: "Index sample repos for dev environment"
    cmds:
      # Go
      - cd ../doctree-samples/go && ../../doctree/.bin/doctree index .
      - cd ../doctree-samples/mux && ../../doctree/.bin/doctree index .
      # Python
      - cd ../doctree-samples/django && ../../doctree/.bin/doctree index .
      # Markdown
      - cd ../doctree-samples/ziglearn && ../../doctree/.bin/doctree index .
      # Zig
      - cd ../doctree-samples/ziglang/lib/std && ../../doctree/.bin/doctree index -project=github.com/ziglang/zig .
